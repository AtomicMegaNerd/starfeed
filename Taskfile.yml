---
version: "3"

dotenv: [./.env]

env:
  out: bin/starfeed
  src: ./cmd/
  grc: $(if command -v grc > /dev/null; then echo "grc"; else echo ""; fi)
  cover_out: cover.out
  exclude_packages: "mocks|cmd"
  coverage_threshold: 80

tasks:
  default:
    cmds:
      - task: test
      - task: lint
      - task: generate-test-reports

  format:
    cmds:
      - go fmt ./...

  build:
    deps: [check-deps]
    cmds:
      - cmd: go build -o {{.out}} {{.src}}
      - cmd: codesign -f -s "RCD Local" {{.out}} --deep
        platforms: [darwin] # Only sign the binary on macOS.

  run:
    deps: [build]
    cmds:
      - cmd: ./{{.out}}

  test:
    deps: [build]
    cmds:
      - |
        {{.grc}} go test $(go list ./... | grep -Ev "{{.exclude_packages}}") \
        -race -v -coverprofile={{.cover_out}}

      - |
        COVERAGE=$(go tool cover -func={{.cover_out}} | grep total: | awk '{print $3}' | sed 's/%//')
        echo "Coverage: $COVERAGE%"
        if [ $(echo "$COVERAGE >= {{.coverage_threshold}}" | bc -l) -eq 0 ]; then
          echo "ERROR: Coverage $COVERAGE% is below threshold {{.coverage_threshold}}%"
          exit 1
        else
          echo "âœ“ Coverage meets threshold ({{.coverage_threshold}}%)"
        fi

  lint:
    cmds:
      - golangci-lint run

  clean:
    cmds:
      - rm -f {{.out}} {{.cover_out}}

  check-deps:
    cmds:
      - go mod tidy
      - go mod verify

  update-deps:
    cmds:
      - go get -u ./...

  generate-test-reports:
    deps: [test]
    cmds:
      - go tool cover -html={{.cover_out}} -o coverage.html
